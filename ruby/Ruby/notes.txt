Types of variable:
	global variable ($apple)
	instance variable (@apple)
	class variable (@@apple)
	constant (APPLE)


Add new elements to an array like this:

	numbers = []
	numbers << 1
	numbers << 2
	numbers << 3

	puts numbers # [1, 2, 3]


Each loop:
	numbers = [1, 3, 5, 7]
	numbers.each { |n| puts n }

Each loop with hash:
	hash = { bacon: 300, coconut: 200 }
	hash.each { |key,value| puts "#{key} price is #{value}" }

Each loop with index:
	animals = ["cat", "dog", "tiger"]
	animals.each_with_index { |animal, idx| puts "We have a #{animal} with index #{idx}" }

Times loop:
	10.times { puts "hello" }
	OR
	10.times { |i| puts "hello #{i}" }

Range loop:
	(1..10).each { |i| puts i }

While loop:
	n = 0
	while n < 10
	  puts n
	  n += 1
	end

Until loop:
There is another keyword, until, which is the same as while but the condition is reversed.
	bottle = 0
	until bottle == 10
	  bottle += 1
	end

Skipping iteration:
	10.times do |i|
	  next unless i.even?
	  puts "hello #{i}"
	end

A better way to do this is to use other methods like step & select.
Example:
	(0...10).select(&:even?) # [0, 2, 4, 6, 8]

Stop loop early:
	numbers = [1,2,4,9,12]
	numbers.each do |n|
	  break if n > 10
	  puts n
	end

The 'upto' method:
	1.upto(5) { |i| puts i }


split & join methods:
	"a-b-c".split("-")	# ["a", "b", "c"]
	["a", "b", "c"].join(",")	# a,b,c